buildscript {
    repositories {
        maven { url 'http://repo1.maven.org/maven2' }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
    }
}
apply plugin: 'android'
apply plugin: 'idea'
apply plugin: 'eclipse'

repositories {
    maven { url 'https://github.com/donnfelker/mvn-repo/raw/master/' }
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'com.android.support:appcompat-v7:18.0.+'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.squareup.dagger:dagger:1.0.1'
    compile 'com.squareup.dagger:dagger-compiler:1.0.1'
    compile 'com.jakewharton:butterknife:1.3.2'
    compile 'com.github.kevinsawicki:http-request:3.0'
    compile 'com.actionbarsherlock:viewpagerindicator:2.4.1'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.github.kevinsawicki:android-pusher:0.6'
    compile 'com.github.kevinsawicki:wishlist:0.9'
    compile 'com.squareup:otto:1.3.4'
    compile 'com.squareup.picasso:picasso:1.1.1'
    compile 'com.j256.ormlite:ormlite-android:4.47'
    compile 'com.j256.ormlite:ormlite-core:4.47'

    instrumentTestCompile 'junit:junit:4.11'
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.0.0'

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        versionCode = 2
        versionName = '1.1.0'
        appName = 'whoisit'
    }

    signingConfigs {
        release {
            storeFile file(System.getenv('ANDROID_KEYSTORE_PATH'))
            storePassword System.getenv('ANDROID_STORE_PASS')
            keyAlias System.getenv('ANDROID_KEY_ALIAS')
            keyPassword System.getenv('ANDROID_KEY_PASS')
        }
    }

    buildTypes {
        debug {
            packageNameSuffix '.debug'
            runProguard false
            debuggable true
            // zipAlign false // this is default for debug
        }
        release {
            //signingConfig signingConfigs.release // causes Travis CI to fail
            debuggable false
            zipAlign true // this is default for release
        }
        android.applicationVariants.all { variant ->
            def apk = variant.packageApplication.outputFile;
            def name = apk.name;
            if (variant.buildType.name == "release") {
                name = apk.name.replace(".apk", "-v" + defaultConfig.versionName + "-RELEASE.apk");
            } else {
                name = apk.name.replace(".apk", "-v" + defaultConfig.versionName + "-SNAPSHOT.apk");
            }

            name = name.replace("app", defaultConfig.appName);
            name = name.replace("-" + variant.buildType.name, "");
            def versionFolderPath = apk.parentFile.toString() + File.separator + "v" + defaultConfig.versionName;
            variant.packageApplication.outputFile = new File(versionFolderPath, name);

            if (variant.zipAlign) {
                variant.zipAlign.outputFile = new File (versionFolderPath, name.replace("-unaligned", ""));
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}
